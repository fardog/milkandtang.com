<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | milkandtang]]></title>
  <link href="http://milkandtang.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://milkandtang.com/"/>
  <updated>2014-02-16T23:12:20-08:00</updated>
  <id>http://milkandtang.com/</id>
  <author>
    <name><![CDATA[Nathan Wittstock]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting WiFi on a Headless Raspberry Pi]]></title>
    <link href="http://milkandtang.com/blog/2013/08/27/getting-wifi-on-a-headless-raspberry-pi/"/>
    <updated>2013-08-27T11:38:00-07:00</updated>
    <id>http://milkandtang.com/blog/2013/08/27/getting-wifi-on-a-headless-raspberry-pi</id>
    <content type="html"><![CDATA[<p>One of the final steps in a to-be-announced project involved getting a headless <a href="http://www.raspberrypi.org/">Raspberry Pi</a> up on WiFi at boot time—which turned out to be a little more challenging that first expected. Not because it was particularly difficult, but because the documentation was poor.</p>

<p>Below are my full configuration files that were required. The WiFi USB dongle itself was an <a href="https://www.adafruit.com/products/1030">Adafruit USB WiFi with Antenna</a> which is actually a B-LINK BBL-LW05-AR5; notable becuase of its sizeable antenna, and for working with the latest Raspbian Wheezy distribution.</p>

<p>Prior to getting started, make sure your Raspbian is up to date by issuing:</p>

<p><code>bash
sudo apt-get update
sudo apt-get upgrade
</code></p>

<p>At that point, reboot and connect your WiFi module to USB. Then, edit your config. It's worth noting that I have an interface <code>eth0</code> which is set to DHCP, and my <code>wlan0</code> interface which has a static IP. This allows me to use ethernet as a failsafe if something goes wrong.</p>

<p>First, in the file <code>/etc/network/interfaces</code>:</p>

<p>```
auto lo</p>

<p>iface lo inet loopback
iface eth0 inet dhcp</p>

<p>allow-hotplug wlan0
iface wlan0 inet manual
wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf</p>

<p>iface YOUR_WIFI_ID inet static
address 192.168.1.5
netmask 255.255.255.0
gateway 192.168.1.1</p>

<h1>iface default inet dhcp</h1>

<p>```</p>

<p>This is setting up your ethernet to dhcp, your wifi to manual, sourcing the <code>wpa_supplicant.conf</code> file, and then assigning your named Wireless connection to a static IP. Note that <em>YOUR_WIFI_ID</em> above should be an identifier you make up yourself. For example, mine is <em>NORTH_WPA</em>.</p>

<p>Now, configure the network information in <code>/etc/wpa_supplicant/wpa_supplicant.conf</code>:</p>

<p>```
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</p>

<h1>update_config=1</h1>

<p>network={</p>

<pre><code>ssid="Your SSID Name"
proto=RSN
key_mgmt=WPA-PSK
pairwise=CCMP TKIP
group=CCMP TKIP
psk="Your WPA Password"
id_str="YOUR_WIFI_ID"
</code></pre>

<p>}
```</p>

<p>Again, note that <em>YOUR_WIFI_ID</em> is present.</p>

<p>At that point, reboot. Assuming you've got all your information correct (and that your key management and etc. match mine) you'll be connected automatically at boot!</p>

<p>Much of the information in this post was gleaned from <a href="http://pingbin.com/2012/12/setup-wifi-raspberry-pi/">this thread</a>. The original poster's information didn't work for me, but I was able to assemble a working config from various commenters' information.</p>

<h4>UPDATE 2014-01-06</h4>

<p>When I switched from the older-style Airport Extreme base stations to the new "tower"-shaped base stations, I was having issues with the WiFi disconnected and then not reconnecting without a reboot. To resolve this, I followed one of the answers in <a href="http://raspberrypi.stackexchange.com/questions/4120/how-to-automatically-reconnect-wifi">this stack exchange post</a>, reproduced below for convenience. This is originally from the user <a href="http://raspberrypi.stackexchange.com/users/6365/andaluz">AndaluZ</a>:</p>

<blockquote><p>Well, there is a very simple solution:</p>

<ol>
<li>Go to <code>/etc/ifplugd/action.d/</code> and rename the <code>ifupdown</code> file to <code>ifupdown.original</code></li>
<li>Then do: <code>cp /etc/wpa_supplicant/ifupdown.sh ./ifupdown</code></li>
<li>Finally: <code>sudo reboot</code></li>
</ol>


<p>That's all. Test this by turning off/on your AP; you should see that your Raspberry Pi properly reconnects.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim, fish shell, and vim-sensible]]></title>
    <link href="http://milkandtang.com/blog/2013/03/22/vim-fish-shell-and-sensible/"/>
    <updated>2013-03-22T00:07:00-07:00</updated>
    <id>http://milkandtang.com/blog/2013/03/22/vim-fish-shell-and-sensible</id>
    <content type="html"><![CDATA[<p>Part of this evening was spent making <code>vim</code> workable for me, the first step was getting some sane defaults. <a href="https://github.com/tpope/vim-sensible">vim-sensible</a> was recommended in several places (as was Tim Pope's also excellent <a href="https://github.com/tpope/vim-pathogen">pathogen</a>), but immediately after installation I was getting an error:</p>

<p><code>
Error detected while processing ~/.vim/bundle/vim-sensible/plugin/sensible.vim:
line   75:
E484: Can't open file /tmp/v1NmKg8/0
Press ENTER or type command to continue
</code></p>

<p>Frustratingly, line 75 held no obvious suggestions. After some time troubleshooting, I found it worked fine if I wasn't using <a href="http://www.ridiculousfish.com/shell/"><code>fish</code> shell</a>.</p>

<p>I'm not positive why this is the case, but you can fix the error by adding the following line to your <code>.vimrc</code>.</p>

<p><code>
set shell=/bin/sh
</code></p>

<p>On next launch of <code>vim</code>, all is resolved.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Caps-Lock as a Compose key in XFCE4]]></title>
    <link href="http://milkandtang.com/blog/2013/02/22/using-caps-lock-as-a-compose-key-in-xfce4/"/>
    <updated>2013-02-22T14:03:00-08:00</updated>
    <id>http://milkandtang.com/blog/2013/02/22/using-caps-lock-as-a-compose-key-in-xfce4</id>
    <content type="html"><![CDATA[<p>Why not take that useless key, and make it useful? The <a href="http://en.wikipedia.org/wiki/Compose_key">Compose Key</a>—formerly present on many <a href="https://www.google.com/search?q=sun+keyboard&amp;hl=en&amp;tbm=isch&amp;tbo=u">Unix keyboards</a> of old—isn't present on most modern laptops.</p>

<p>In <a href="http://www.xfce.org/">XFCE</a>, this is a little more cumbersome than Gnome, since there isn't a graphical interface for <code>setxkbmap</code>, but these two commands will swap the Caps lock for a compose key:</p>

<p><code>bash
setxkbmap -option ctrl:nocaps  # disables caps lock
setxkbmap -option compose:caps  # sets caps key to compose
</code></p>

<p>To make this active at login, you can add two entries to your "Session and Startup" -> "Application Autostart" available under the <strong>Settings Manager</strong>. I've named mine "compose1" and "compose2", each containing one of the above commands. Now enjoy all those <a href="http://en.wikipedia.org/wiki/Dash#En_dash">en-dashes</a> you'll surely be typing.</p>
]]></content>
  </entry>
  
</feed>
