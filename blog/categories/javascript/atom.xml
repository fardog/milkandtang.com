<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Javascript | milkandtang]]></title>
  <link href="http://milkandtang.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://milkandtang.com/"/>
  <updated>2013-10-16T16:30:01-07:00</updated>
  <id>http://milkandtang.com/</id>
  <author>
    <name><![CDATA[Nathan Wittstock]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[primes, A Twitter-backed prime number generator]]></title>
    <link href="http://milkandtang.com/blog/2013/10/15/primes-twitter-account/"/>
    <updated>2013-10-15T15:44:00-07:00</updated>
    <id>http://milkandtang.com/blog/2013/10/15/primes-twitter-account</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/_primes_"><img src="/media/2013-10-16_primes.png" alt="_primes_ Twitter avatar" /></a></p>

<p>A few weeks ago I started <a href="https://twitter.com/_primes_"><em>primes</em></a>, a Twitter-backed <a href="http://en.wikipedia.org/wiki/Prime_number">prime number</a> generator. When I say "Twitter-backed", I mean the bot that updates the account has very little idea of state: it only knows the last number it calculated because Twitter provides it. The program flow is this:</p>

<ol>
<li>Start up</li>
<li>Fetch the most recently calculated prime from the Twitter feed.</li>
<li>Calculate the next prime.</li>
<li>Post if an hour has passed since the last posting. Wait if not, then post.</li>
<li>Steps 2–4 forever.</li>
</ol>


<p>Technically steps two and four are merged after the first posting, since Twitter returns your latest tweet as a response when you post it. You can <a href="http://github.com/fardog/_primes_">view the code</a> on Github. It's written in CoffeeScript on Node.js, and uses <a href="https://github.com/laverdet/node-fibers">node-fibers</a> since I orginally built the prime number algorithm as a <a href="http://en.wikipedia.org/wiki/Generator_(computer_programming)">generator</a>, but it's unnecessary in this case.</p>

<p>The only state the application maintains is an internal "last posting" date, just as a fail-safe if the server it runs on spontaneously changed time: I didn't want it accidentally posting too quickly.</p>

<p>You should give it a follow if you love primes! Or maybe <a href="http://github.com/fardog/_primes_">fork the code</a> and make some new Twitter bots? I'd love to see some.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[keeping your countdowns in check]]></title>
    <link href="http://milkandtang.com/blog/2013/07/12/keeping-your-countdowns-in-check/"/>
    <updated>2013-07-12T22:09:00-07:00</updated>
    <id>http://milkandtang.com/blog/2013/07/12/keeping-your-countdowns-in-check</id>
    <content type="html"><![CDATA[<p><a href="http://timer.fardogllc.com">Timer</a> is a simple, multiple countdown timer web application. The iPhone lacks multiple timers, and what I found on the app store was poor. What I found online, also poor (and way too full of ads), so I built one. It's pretty simple, and hopefully you'll find it useful.</p>

<p>I've actually started some additional work on it—such as long-running timers that are remembered if you leave the site—but I'll probably come back to those some other day. Also this includes my newest pre-deployment processing scripts, which perform automatic minification and building from <a href="http://jinja.pocoo.org/">jinja</a> templates. They may be of interest to someone.</p>

<p>Timer's source is <a href="http://github.com/fardog/timer/">available on my github</a>. I would love to see some patches or improvements! Or, just enjoy as-is.</p>
]]></content>
  </entry>
  
</feed>
